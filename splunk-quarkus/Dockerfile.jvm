####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
###

# Build the project
FROM registry.access.redhat.com/ubi8/openjdk-11:latest AS build
USER root
COPY ./mvnw /home/jboss/
COPY ./.mvn /home/jboss/.mvn
COPY ./eclipse-formatter-config.xml /home/jboss/
COPY ./splunk-quarkus /home/jboss
WORKDIR /home/jboss
RUN ./mvnw --no-transfer-progress clean package -DskipTests

# Build the container
FROM registry.access.redhat.com/ubi8/ubi-minimal:latest

ARG JAVA_PACKAGE=java-11-openjdk-headless
ENV deps="openssl curl ca-certificates ${JAVA_PACKAGE}"
ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'

# Install java
# Also set up permissions for user `1001`
RUN microdnf install $deps \
    && microdnf update \
    && microdnf clean all \
    && mkdir /deployments \
    && chown 1001 /deployments \
    && chmod "g+rwX" /deployments \
    && chown 1001:root /deployments \
    && echo "securerandom.source=file:/dev/urandom" >> /etc/alternatives/jre/lib/security/java.security

ENV INTEGRATION_HANDLER_PATTERN="Splunk*" \
    INTEGRATION_COMPONENT_NAME="splunk" \
    JAVA_OPTIONS="-Djava.util.logging.manager=org.jboss.logmanager.LogManager\
 -Dquarkus.log.file.enable=false"

# Use four distinct layers so if there are application changes the library layers can be re-used
COPY --from=build --chown=1001 /home/jboss/target/quarkus-app/lib/ /deployments/lib/
COPY --from=build --chown=1001 /home/jboss/target/quarkus-app/*.jar /deployments/
COPY --from=build --chown=1001 /home/jboss/target/quarkus-app/app/ /deployments/app/
COPY --from=build --chown=1001 /home/jboss/target/quarkus-app/quarkus/ /deployments/quarkus/

EXPOSE 8080
USER 1001

ENTRYPOINT ["sh", "-c", "java -Dquarkus.http.host=0.0.0.0 $JAVA_OPTIONS \
 -Dcamel.main.javaRoutesIncludePattern=\"**/MainRoutes*,**/ErrorHandlingRoutes*,**/$INTEGRATION_HANDLER_PATTERN\"\
 -Dintegrations.component.name=$INTEGRATION_COMPONENT_NAME\
 -jar /deployments/quarkus-run.jar "]
